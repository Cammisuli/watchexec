This is a release PR for **<%= crate.name %>** version **<%= version.actual %>**<%
    if (version.actual != version.desired) {
%> (performing a <%= version.desired %> bump).<%
    } else {
%>.<%
    }
%>

<% if (pr.mergeStrategy == "merge") { %>
**Use a merge commit.**
<% } else if (pr.mergeStrategy == "rebase") { %>
**Use rebase merge.**
<% } else if (pr.mergeStrategy == "squash") { %>
**Use squash merge.**
<% } else if (pr.mergeStrategy == "bors") { %>
**Merge by commenting:**
| bors r+ |
|:-:|
<% } %>

<% if (crate.name == "watchexec-cli") { %>
Upon merging, this will automatically create the tag `v<%= version.actual %>`, build the CLI, and create a GitHub release.
You will still need to manually publish the cargo crate:

```
$ git switch main
$ git pull
$ git switch --detach v<%= version.actual %>
$ cargo publish -p <%= crate.name %>
```
<% } else { %>
Upon merging, this will create the tag `<%= crate.name %>-v<%= version.actual %>`.
You will still need to manually publish the cargo crate:

```
$ git switch main
$ git pull
$ git switch --detach <%= crate.name %>-v<%= version.actual %>
$ cargo publish -p <%= crate.name %>
```
<% } %>

**To trigger builds initially, close and then immediately re-open this PR once.**

<% if (pr.releaseNotes) { %>
---

_Edit release notes into the section below:_

<!-- do not change or remove this heading -->
### Release notes

_Software development often involves running the same commands over and over. Boring! Watchexec is a simple, standalone tool that watches a path and runs a command whenever it detects modifications. Install it today with [`cargo-binstall watchexec-cli`](https://github.com/cargo-bins/cargo-binstall), from the binaries below, or build it from source with `cargo install watchexec-cli`._

#### In this release:

-

#### Other changes:

-
<% } %>
